@model CSSEntity.Employee
@{
    Layout = "~/Views/Shared/_layout_for_offices.cshtml";
}

<head>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link href="~/Content/mystyle.css" rel="stylesheet" />
    <link rel="stylesheet" href="/resources/demos/style.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/css?family=Raleway" rel="stylesheet">
    <script src="~/Scripts/jquery-ui-1.8.9.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    <script src="~/Scripts/jquery.ui.datepicker.js"></script>
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="~/Scripts/myScript.js"></script>
    <script>
        //$(function () {
        //    $("#datepicker").datepicker({
        //        changeMonth: true,
        //        changeYear: true
        //    });
        //});
    </script>
</head>
    <span>Office : </span><legend><b>@Session["officeDivision"]</b></legend>
    <form id="regForm" method="post">
        <h1>Add Employee:</h1>
        <!-- One "tab" for each step in the form: -->
        <div class="tab">
            User Information:
            <p><input placeholder="name..." oninput="this.className = ''" name="name"></p>
            <p><input placeholder="date of birth..." oninput="this.className = ''" name="Birthday" id="Bdatepicker" type="text"></p>
            <p><input placeholder="national id..." oninput="this.className = ''" name="NationalId" type="text"></p>
        </div>
        <div class="tab">
            Contact Info:
            <p><input placeholder="E-mail..." oninput="this.className = ''" name="Email" type="email"></p>
            <p><input placeholder="Phone..." oninput="this.className = ''" name="PhoneNumber" type="number"></p>
            <p><input placeholder="Address..." oninput="this.className = ''" name="Address" type="text"></p>
        </div>
        <div class="tab">
            Offical Information:
            <p><input placeholder="join date..." oninput="this.className = ''" name="JoinDate" id="Jdatepicker"></p>
            <select name="Position" required>
                <option value="">Please Select a Position</option>
                <option value="Admin">Admin</option>
                <option value="Manager">Manager</option>
                <option value="Staff">Staff</option>
                <option value="Driver">Driver</option>
            </select>
            <p><input placeholder="salary..." oninput="this.className = ''" name="Salary" type="number"></p>
            <p>@Session["officeId"]</p>
        </div>
        @*<div class="tab">Login Info:
              <p><input placeholder="Username..." oninput="this.className = ''" name="uname"></p>
              <p><input placeholder="Password..." oninput="this.className = ''" name="pword" type="password"></p>
            </div>*@
        <div style="overflow:auto;">
            <div style="float:right;">
                <button type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
                <button type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>
            </div>
        </div>
        <!-- Circles which indicates the steps of the form: -->
        <div style="text-align:center;margin-top:40px;">
            <span class="step"></span>
            <span class="step"></span>
            <span class="step"></span>
        </div>
    </form>

    <script>
        var currentTab = 0; // Current tab is set to be the first tab (0)
        showTab(currentTab); // Display the crurrent tab

        function showTab(n) {
            // This function will display the specified tab of the form...
            var x = document.getElementsByClassName("tab");
            x[n].style.display = "block";
            //... and fix the Previous/Next buttons:
            if (n == 0) {
                document.getElementById("prevBtn").style.display = "none";
            } else {
                document.getElementById("prevBtn").style.display = "inline";
            }
            if (n == (x.length - 1)) {
                document.getElementById("nextBtn").innerHTML = "Submit";
            } else {
                document.getElementById("nextBtn").innerHTML = "Next";
            }
            //... and run a function that will display the correct step indicator:
            fixStepIndicator(n)
        }

        function nextPrev(n) {
            // This function will figure out which tab to display
            var x = document.getElementsByClassName("tab");
            // Exit the function if any field in the current tab is invalid:
            if (n == 1 && !validateForm()) return false;
            // Hide the current tab:
            if (currentTab < x.length - 1)
                x[currentTab].style.display = "none";
            // Increase or decrease the current tab by 1:
            currentTab = currentTab + n;
            // if you have reached the end of the form...
            if (currentTab >= x.length) {
                // ... the form gets submitted:
                document.getElementById("regForm").submit();
                return false;
            }
            // Otherwise, display the correct tab:
            showTab(currentTab);
        }

        function validateForm() {
            // This function deals with validation of the form fields
            var x, y, i, valid = true;
            x = document.getElementsByClassName("tab");
            y = x[currentTab].getElementsByTagName("input");
            // A loop that checks every input field in the current tab:
            for (i = 0; i < y.length; i++) {
                // If a field is empty...
                if (y[i].value == "") {
                    // add an "invalid" class to the field:
                    y[i].className += " invalid";
                    // and set the current valid status to false
                    valid = false;
                }
            }
            // If the valid status is true, mark the step as finished and valid:
            if (valid) {
                document.getElementsByClassName("step")[currentTab].className += " finish";
            }
            return valid; // return the valid status
        }

        function fixStepIndicator(n) {
            // This function removes the "active" class of all steps...
            var i, x = document.getElementsByClassName("step");
            for (i = 0; i < x.length; i++) {
                x[i].className = x[i].className.replace(" active", "");
            }
            //... and adds the "active" class on the current step:
            x[n].className += " active";
        }
    </script>
