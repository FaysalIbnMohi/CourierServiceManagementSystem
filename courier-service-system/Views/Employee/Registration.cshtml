@model CSSEntity.Employee
@{
    if (ViewBag.Reg == "Yes")
    {
        Layout = "~/Views/Shared/_layout_for_employees.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_layout_after_login.cshtml";
    }
}

<head>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link href="~/Content/mystyle.css" rel="stylesheet" />
    <link rel="stylesheet" href="/resources/demos/style.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/css?family=Raleway" rel="stylesheet">
    <script src="~/Scripts/jquery-ui-1.8.9.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    <script src="~/Scripts/jquery.ui.datepicker.js"></script>
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="~/Scripts/jquery.fileupload.js"></script>
    <script src="~/Scripts/jquery.fileupload-process.js"></script>
    <script src="~/Scripts/jquery.fileupload-ui.js"></script>
    <script src="~/Scripts/jquery.iframe-transport.js"></script>
    <script src="~/Scripts/myScript.js"></script>
</head>
<br />
<!DOCTYPE html>
<html>

<body>
<form id="regForm" method="post">
  <h1>Add Employee:</h1>
  <!-- One "tab" for each step in the form: -->
  <div class="tab">User Information:
    <p><input placeholder="name..." oninput="this.className = ''" name="name"></p>
    <p><input placeholder="date of birth..." oninput="this.className = ''" name="Birthday" id="Bdatepicker" type="text"></p>
    <p><input placeholder="national id..." oninput="this.className = ''" name="NationalId" type="text"></p>
    <p>
        <label>Profile Picture</label>
        <div class="form-group col-sm-7" style="border:ridge">
            <div align="center">
                <div id="crop"><span class="glyphicon glyphicon-edit" title="Crop Again"></span></div>
                <img id="previewAgentProfilePicture" class="profile-picture img-responsive img-circle margin-auto" src="" />
                @*<div>*@
                <input type='file' id="imgInp" name="ImageFile" accept="image/*" style="display:none" /><div id="blaaa" style="cursor: pointer"><span class="glyphicon glyphicon-upload"></span>&nbsp; Upload</div>
                @*<img id="blah" width="400" src="@Url.Content(Model.Detail.ProfilePicture)" alt="your image" />*@
                @*</div>*@
            </div>
            <button value="" class="btn-file btn btn-default" id="cropAgain" style="display:none">Crop Again</button>
        </div>
    </p>
  </div>
  <div class="tab">Contact Info:
    <p><input placeholder="E-mail..." oninput="this.className = ''" name="Email" type="email"></p>
    <p><input placeholder="Phone..." oninput="this.className = ''" name="PhoneNumber" type="number"></p>
    <p><input placeholder="Address..." oninput="this.className = ''" name="Address" type="text"></p>
  </div>
  <div class="tab">Offical Information:
    <p><input placeholder="join date..." oninput="this.className = ''" name="JoinDate" id="Jdatepicker"></p>
    <select name="Position" required>
          <option value="">Please Select a Position</option>
          <option value="Admin">Admin</option>
          <option value="Manager">Manager</option>
          <option value="Driver">Driver</option>
      </select>
    <p><input placeholder="salary..." oninput="this.className = ''" name="Salary" type="number"></p>
     <p>@Html.DropDownListFor(model => model.OfficeId, (IEnumerable<SelectListItem>)ViewBag.Offices,new { @name = "OfficeId"})</p>
  </div>
  @*<div class="tab">Login Info:
    <p><input placeholder="Username..." oninput="this.className = ''" name="uname"></p>
    <p><input placeholder="Password..." oninput="this.className = ''" name="pword" type="password"></p>
  </div>*@
  <div style="overflow:auto;">
    <div style="float:right;">
      <button type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
      <button type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>
    </div>
  </div>
  <!-- Circles which indicates the steps of the form: -->
  <div style="text-align:center;margin-top:40px;">
    <span class="step"></span>
    <span class="step"></span>
    <span class="step"></span>
  </div>
</form>

<script>
var currentTab = 0; // Current tab is set to be the first tab (0)
showTab(currentTab); // Display the crurrent tab

function showTab(n) {
  // This function will display the specified tab of the form...
  var x = document.getElementsByClassName("tab");
  x[n].style.display = "block";
  //... and fix the Previous/Next buttons:
  if (n == 0) {
    document.getElementById("prevBtn").style.display = "none";
  } else {
    document.getElementById("prevBtn").style.display = "inline";
  }
  if (n == (x.length - 1)) {
    document.getElementById("nextBtn").innerHTML = "Submit";
  } else {
    document.getElementById("nextBtn").innerHTML = "Next";
  }
  //... and run a function that will display the correct step indicator:
  fixStepIndicator(n)
}

function nextPrev(n) {
    // This function will figure out which tab to display
    var x = document.getElementsByClassName("tab");
    // Exit the function if any field in the current tab is invalid:
    if (n == 1 && !validateForm()) return false;
    // Hide the current tab:
    if (currentTab < x.length - 1)
        x[currentTab].style.display = "none";
    // Increase or decrease the current tab by 1:
    currentTab = currentTab + n;
    // if you have reached the end of the form...
    if (currentTab >= x.length) {
    // ... the form gets submitted:
        document.getElementById("regForm").submit();
        return false;
    }
    // Otherwise, display the correct tab:
    showTab(currentTab);
}

function validateForm() {
  // This function deals with validation of the form fields
  var x, y, i, valid = true;
  x = document.getElementsByClassName("tab");
  y = x[currentTab].getElementsByTagName("input");
  // A loop that checks every input field in the current tab:
  for (i = 0; i < y.length; i++) {
    // If a field is empty...
    if (y[i].value == "") {
      // add an "invalid" class to the field:
      y[i].className += " invalid";
      // and set the current valid status to false
      valid = false;
    }
  }
  // If the valid status is true, mark the step as finished and valid:
  if (valid) {
    document.getElementsByClassName("step")[currentTab].className += " finish";
  }
  return valid; // return the valid status
}

function fixStepIndicator(n) {
  // This function removes the "active" class of all steps...
  var i, x = document.getElementsByClassName("step");
  for (i = 0; i < x.length; i++) {
    x[i].className = x[i].className.replace(" active", "");
  }
  //... and adds the "active" class on the current step:
  x[n].className += " active";
}
</script>
    <script>
    $(function () {
        //$('#upload').click(function () {
        //    $(this).next().trigger('click');
        //});
        $('#crop').on('click', function () {
            //alert("Hello");
            $('#cropAgain').click();
        });
        $('#cropAgain').click(function () {
            var _href = $('#cropAgain').val();
            $("#lnkCropImage").attr('href', "/Profile/CropProfileImage?url=" + encodeURIComponent(_href));
            $("#lnkCropImage").click();
        });
        $('#blaaa').on('click', function () {
            //alert("Hello");
            $('#imgInp').click();
            });
        $('#imgInp').fileupload({
            url: '/File/UploadProfilePicture?resumeId=@Model.Detail.ResumeId',
            dataType: 'json',
            done: function (e, data) {
                console.log(data);
                if (data.result.success == true) {
                    $('#cropAgain').val(data.result.filename);
                    $("#lnkCropImage").attr('href', "/Profile/CropProfileImage?url=" + encodeURIComponent(data.result.filename))
                    $("#lnkCropImage").click();
                }
            },
            progressall: function (e, data) {
                var progress = parseInt(data.loaded / data.total * 100, 10);
                $('#progress .progress-bar').css(
                    'width',
                    progress + '%'
                );
            }
        }).prop('disabled', !$.support.fileInput)
            .parent().addClass($.support.fileInput ? undefined : 'disabled');

});
    </script> 
</body>
</html>